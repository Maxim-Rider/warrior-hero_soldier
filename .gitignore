#warrior
class Warrior:
  def __init__(self,health):
    self.health = health

  def hit(self,target,target1):
    if target.health > 0:
      target.health -= 20
      if target1 == warrior1:
        target1 = "Warrior1"
      if target1 == warrior2:
        target1 = "Warrior2"
      print(target1, " has attacked")
      print(target.health, " left")
    if target.health == 0:
      print(target1, " has won") 
      

warrior1 = Warrior(100)   
warrior2 = Warrior(100)


q = int(input("Enter 1 to let some warrior attack. Enter 2 to stop program:"))
import random
while q != 2:
  if q == 1:
    j = random.randint(1,3)
    if j % 2 == 0:
      warrior1.hit(warrior2,warrior1)
      q = int(input("Enter 1 to let some warrior attack:"))
    else:  
      warrior2.hit(warrior1,warrior2)
      q = int(input("Enter 1 to let some warrior attack:"))
  else:
    print("Wrong input.")
    break 
    
#hero_soldier
class Solder:
	def __init__(self, number, team):
		self.team = team
		self.number = number
 
	def to_hero(self, hero):
		return hero.number, self.number
 
class Hero:
	def __init__(self, number, team_number, team): # Если сдесь обьявить team=[] то почему то у нас список не сбрасывается для каждого отдельного экземпляра.
		self.team_number = team_number
		self.number = number
		self.lvl = 0
		self.team = team
 
	def up_lvl(self):
		self.lvl += 1
 
	def add_solder(self, solder):
		return self.team.append(solder)
 
	def look_count_team(self):
		return len(self.team)
 
hero_team_first = Hero(1, 1, [])
hero_team_second = Hero(2, 2, [])
count = 0
while count < 10:
	team_for_solder = random.randrange(1, 3)
	number_for_solder = random.random()
	if team_for_solder == 1:
		hero_team_first.add_solder(Solder(number_for_solder, team_for_solder))
	else:
		hero_team_second.add_solder(Solder(number_for_solder, team_for_solder))
	count += 1	
 
 
 
if hero_team_first.look_count_team() > hero_team_second.look_count_team():
	hero_team_first.up_lvl()
else:
	hero_team_second.up_lvl()
 
print(hero_team_first.team[0].to_hero(hero_team_first))


##############################
class Hero:
    def __init__(self, number, team_number, team=[]):
        self.team_number = team_number
        self.number = number
        self.lvl = 0
        self.team = team
 
first = Hero(1, 1)
second = Hero(2, 2)
first.team.append('ben')
second.team.append('ken')
print(first.team, second.team)
print(first.team is second.team)
